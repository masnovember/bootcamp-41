openapi: 3.0.3
info:
  title: Swagger Products Bank - OpenAPI 3.0
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:8001/api/v1
tags:
  - name: products
    description: Products of the bank
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /products:
    get:
      tags:
        - product
      summary: Show all bank products
      description: Returns all bank product
      operationId: getAll
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'          
        '400':
          description: Invalid path
        '404':
          description: Products not found
    put:
      tags:
        - product
      summary: Update an existing product
      description: Update an existing product
      operationId: update
      requestBody:
        description: Update an existent product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'          
        '400':
          description: Invalid ID supplied
        '404':
          description: Products not found
        '405':
          description: Validation exception
    post:
      tags:
        - product
      summary: Add a new product to the bank
      description: Add a new pet to the store
      operationId: save
      requestBody:
        description: Create a new product in the bank
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'          
  /products/{productId}:
    delete:
      tags:
        - product
      summary: Delete a product
      description: delete a product
      operationId: deleteBy
      parameters:
        - name: productId
          in: path
          description: product id to delete
          required: true
          schema:
            type: integer
      responses:
        '400':
          description: Invalid product value
components:
  schemas:
    Product:
      required:
        - productId
        - productName
        - productType
        - productHaveMaintenance
        - productHaveLimitMovements
        - productHaveDayMovements
      type: object
      properties:
        productId:
          type: integer
          example: 1
        productName:
          maxLength: 255
          type: string
          example: Cuenta Corriente
        productType:
          maxLength: 255
          type: string
          example: A
        productHaveMaintenance:
          type: boolean
          example: 0
        productMaintenance:
          type: number
          example: 20
        productHaveLimitMovements:
          type: boolean
          example: 0
        productMonthlyMovements:
          type: number
          example: 20
        productHaveDayMovements:
          type: boolean
          example: 0
        productDayMovements:
          type: number
          example: 20  
  requestBodies:
    Product:
      description: Product object that needs to be added to the bank
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Product'